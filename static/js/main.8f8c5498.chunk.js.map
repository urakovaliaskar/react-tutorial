{"version":3,"sources":["Table.js","Form.js","Api.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","type","onChange","App","data","fetch","then","result","json","entry","ReactDOM","render","Api","document","getElementById"],"mappings":"qQAEMA,EAAc,WAChB,OACI,+BACI,4BACI,sCACA,qCACA,2CAMVC,EAAY,SAAAC,GAEV,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACA,wBAAIC,IAAKD,GACT,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACA,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAMJ,OAAO,+BAAQJ,IAiBRU,E,iLAXD,IAAD,EACsCC,KAAKZ,MAAxCE,EADH,EACGA,cAAeQ,EADlB,EACkBA,gBACvB,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,S,GANtDG,a,OCiBLC,E,YA/CX,WAAYd,GAAQ,IAAD,8BACf,4CAAMA,KAUVe,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBV,EADY,EACZA,KAAMW,EADM,EACNA,MAEd,EAAKC,SAAL,eACKZ,EAAOW,KAfG,EAmBnBE,WAAa,WACT,EAAKpB,MAAMqB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAlBnB,EAAKA,aAAe,CAChBhB,KAAM,GACNC,IAAK,IAGT,EAAKc,MAAQ,EAAKC,aARH,E,sEAwBT,IAAD,EACiBX,KAAKU,MAAnBf,EADH,EACGA,KAAMC,EADT,EACSA,IAEd,OACI,8BACI,uCACA,2BACIgB,KAAK,OACLjB,KAAK,OACLW,MAAOX,EACPkB,SAAUb,KAAKG,eACnB,sCACA,2BACIS,KAAK,OACLjB,KAAK,MACLW,MAAOV,EACPiB,SAAUb,KAAKG,eACnB,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASG,KAAKQ,kB,GA1C/CP,aC8BJa,GC5BGb,Y,2MDDdS,MAAQ,CACJK,KAAM,I,mFAIW,IAAD,OAIhBC,MAFI,kGAGCC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GACF,EAAKX,SAAS,CACVQ,KAAMG,S,+BAKZ,IAGAA,EAFWlB,KAAKU,MAAdK,KAEYxB,KAAI,SAAC6B,EAAO3B,GAC5B,OAAO,wBAAIC,IAAKD,GAAQ2B,MAG5B,OAAO,4BAAKF,O,GA1BFjB,c,MEKlBoB,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8f8c5498.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nconst TableHeader = () => {\n    return (\n        < thead >\n            < tr >\n                < th > Name < /th>\n                < th > Job < /th>\n                < th > Remove < /th>\n            < /tr>\n        < /thead>\n)\n}\n\nconst TableBody = props => {\n\n        const rows = props.characterData.map((row, index) => {\n            return (\n            <tr key={index}>\n            <td>{row.name}</td>\n            <td>{row.job}</td>\n            <td>\n            <button onClick={() => props.removeCharacter(index)}>Delete</button>\n            </td>\n            </tr>\n            )\n        });\n\n        return <tbody>{rows}</tbody>\n\n\n}\n\nclass Table extends Component {\n    render() {\n        const { characterData, removeCharacter } = this.props\n        return (\n            <table>\n                <TableHeader />\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n            </table>\n    )\n    }\n}\n\nexport default Table","import React, { Component } from 'react'\n\nclass Form extends Component {\n    constructor(props) {\n        super(props)\n\n        this.initialState = {\n            name: '',\n            job: '',\n        }\n\n        this.state = this.initialState\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n    render() {\n        const { name, job } = this.state;\n\n        return (\n            <form>\n                <label>Name</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={this.handleChange} />\n                <label>Job</label>\n                <input\n                    type=\"text\"\n                    name=\"job\"\n                    value={job}\n                    onChange={this.handleChange} />\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n        );\n    }\n}\n\nexport default Form;","import React, { Component } from 'react'\n\nclass App extends Component {\n    state = {\n        data: [],\n    }\n\n    // Code is invoked after the component is mounted/inserted into the DOM tree.\n    componentDidMount() {\n        const url =\n            'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*'\n\n        fetch(url)\n            .then(result => result.json())\n            .then(result => {\n                this.setState({\n                    data: result,\n                })\n            })\n    }\n\n    render() {\n        const { data } = this.state\n\n        const result = data.map((entry, index) => {\n            return <li key={index}>{entry}</li>\n        })\n\n        return <ul>{result}</ul>\n    }\n}\n\nexport default App","import React, {Component} from 'react';\nimport Table from './Table.js';\nimport Form from './Form.js';\n\nclass App extends Component {\n\n\n    state ={\n        characters: [],\n    }\n\n\n    removeCharacter = index => {\n        const { characters } = this.state\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index\n            }),\n        })\n    }\n\n    handleSubmit = character => {\n        this.setState({ characters: [...this.state.characters, character] })\n    }\n\n    render() {\n        const {characters} = this.state;\n        return (\n            <div className=\"container\">\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n    )\n        ;\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Api from './Api';\nimport './index.css';\n\n\nReactDOM.render(<Api />, document.getElementById('root'));"],"sourceRoot":""}